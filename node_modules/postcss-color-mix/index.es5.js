'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _postcss = require('postcss');

var _postcss2 = _interopRequireDefault(_postcss);

var _balancedMatch = require('balanced-match');

var _balancedMatch2 = _interopRequireDefault(_balancedMatch);

var _color = require('color');

var _color2 = _interopRequireDefault(_color);

var _postcssMessageHelpers = require('postcss-message-helpers');

var mix = function mix(c1, c2) {
  var w = arguments.length <= 2 || arguments[2] === undefined ? '' : arguments[2];

  var weight = w.endsWith('%') ? w.replace('%', '') : w * 100;
  var mixed = (0, _color2['default'])(c1).mix((0, _color2['default'])(c2), weight);
  return mixed.alpha() < 1 ? mixed.rgbaString() : mixed.hexString();
};

var transformColor = function transformColor(string, source) {
  if (string.indexOf('mix(') === -1) {
    return string;
  }

  var value = (0, _balancedMatch2['default'])('(', ')', string).body;

  if (!value) {
    throw new Error('Missing closing parentheses in "' + string + '"', source);
  }

  return mix.apply(null, value.split(/,\s*(?![^()]*\))/));
};

var transformDecl = function transformDecl(decl) {
  if (!decl.value || decl.value.indexOf('mix(') === -1) {
    return;
  }

  decl.value = (0, _postcssMessageHelpers['try'])(function () {
    return transformColor(decl.value, decl.source);
  }, decl.source);
};

exports['default'] = _postcss2['default'].plugin('postcss-color-mix', function () {
  return function (style) {
    style.walkDecls(transformDecl);
  };
});
module.exports = exports['default'];

