import { L as u } from "./Icon-lcclSy6l.js";
import { L as S, a as w } from "./Collapse-BGMLBE6P.js";
import { _ as z, w as L, m as D } from "./utils-DSsG9kky.js";
import { defineComponent as I, useSlots as N, ref as R, computed as l, inject as E, openBlock as d, createBlock as h, resolveDynamicComponent as O, normalizeClass as U, unref as s, withCtx as V, renderSlot as c, createVNode as j, normalizeStyle as k, createCommentVNode as C, provide as K, reactive as P, toRef as r, createElementBlock as X } from "vue";
import { library as Y } from "@fortawesome/fontawesome-svg-core";
import { fas as q } from "@fortawesome/free-solid-svg-icons";
import { t as A } from "./vendor-BVNR0mO6.js";
const T = Symbol("buttonGroupContext"), F = /* @__PURE__ */ I({
  name: "LiButton",
  __name: "Button",
  props: {
    tag: { default: "button" },
    type: {},
    size: {},
    nativeType: { default: "button" },
    disabled: { type: Boolean },
    loading: { type: Boolean },
    icon: {},
    circle: { type: Boolean },
    plain: { type: Boolean },
    round: { type: Boolean },
    loadingIcon: {},
    autofocus: { type: Boolean },
    useThrottle: { type: Boolean, default: !0 },
    throttleDuration: { default: 500 }
  },
  emits: ["click"],
  setup(a, { expose: n, emit: i }) {
    const o = a, _ = i, G = N(), p = R(), m = l(() => ({
      marginRight: G.default ? "6px" : "0px"
    })), f = (e) => _("click", e), $ = A(
      f,
      o.throttleDuration,
      // 节流的时间间隔
      { trailing: !1 }
      // 只有在节流时间间隔的开始时调用函数
    );
    n({
      ref: p
    });
    const t = E(T, void 0), y = l(() => (t == null ? void 0 : t.size) ?? (o == null ? void 0 : o.size) ?? ""), B = l(() => (t == null ? void 0 : t.type) ?? (o == null ? void 0 : o.type) ?? ""), b = l(() => (t == null ? void 0 : t.disabled) || (o == null ? void 0 : o.disabled) || !1);
    return (e, v) => (d(), h(O(e.tag), {
      ref_key: "_ref",
      ref: p,
      class: U(["li-button", {
        [`li-button--${B.value}`]: B.value,
        [`li-button--${y.value}`]: y.value,
        "is-plain": e.plain,
        "is-round": e.round,
        "is-circle": e.circle,
        "is-disabled": b.value,
        "is-loading": e.loading
      }]),
      autofocus: e.autofocus,
      type: e.tag === "button" ? e.nativeType : void 0,
      disabled: b.value || e.loading ? !0 : void 0,
      onClick: v[0] || (v[0] = (g) => e.useThrottle ? s($)(g) : f(g))
    }, {
      default: V(() => [
        e.loading ? c(e.$slots, "loading", { key: 0 }, () => [
          j(s(u), {
            class: "loading-icon",
            icon: e.loadingIcon ?? "spinner",
            style: k(m.value),
            size: "1x",
            spin: ""
          }, null, 8, ["icon", "style"])
        ], !0) : C("", !0),
        e.icon && !e.loading ? (d(), h(s(u), {
          key: 1,
          icon: e.icon,
          style: k(m.value),
          size: "1x"
        }, null, 8, ["icon", "style"])) : C("", !0),
        c(e.$slots, "default", {}, void 0, !0)
      ]),
      _: 3
    }, 8, ["autofocus", "type", "disabled", "class"]));
  }
}), H = /* @__PURE__ */ z(F, [["__scopeId", "data-v-0fd715d9"]]), J = { class: "li-button-group" }, M = /* @__PURE__ */ I({
  name: "LiButtonGroup",
  __name: "ButtonGroup",
  props: {
    size: {},
    type: {},
    disabled: { type: Boolean }
  },
  setup(a) {
    const n = a;
    return K(
      T,
      P({
        size: r(n, "size"),
        type: r(n, "type"),
        disabled: r(n, "disabled")
      })
    ), (i, o) => (d(), X("div", J, [
      c(i.$slots, "default", {}, void 0, !0)
    ]));
  }
}), Q = /* @__PURE__ */ z(M, [["__scopeId", "data-v-4ba70178"]]), W = L(H), Z = L(Q), x = [
  W,
  u,
  Z,
  S,
  w
];
Y.add(q);
const se = D(x);
export {
  W as LiButton,
  Z as LiButtonGroup,
  S as LiCollapse,
  w as LiCollapseItem,
  u as LiIcon,
  se as default
};
